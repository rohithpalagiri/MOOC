{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rohit\\\\Documents\\\\Projects\\\\MOOC\\\\part1\\\\unicafe\\\\src\\\\index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Button = props => {\n  return /*#__PURE__*/React.createElement(\"button\", {\n    onClick: props.handlClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, props.text);\n};\n\nconst Display = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, props.response, \": \", props.count);\n};\n\nconst Statistics = ({\n  good,\n  bad,\n  neutral\n}) => {\n  const addUp = () => {\n    return good + bad + neutral;\n  };\n\n  const calcAverage = () => {\n    return (good - bad) / (good + bad + neutral);\n  };\n\n  const calcPositive = () => {\n    return good / (good + bad + neutral);\n  };\n\n  if (addUp() === 0) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, \"Statistic\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"all: \", addUp()), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"average: \", calcAverage(), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"average: \", calcPositive(), \" \"));\n};\n\nconst App = () => {\n  // save clicks of each button to own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const clickGood = () => {\n    setGood(good + 1);\n  };\n\n  const clickNeutral = () => {\n    setNeutral(neutral + 1);\n  };\n\n  const clickBad = () => {\n    setBad(bad + 1);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \"give feeedback\"), /*#__PURE__*/React.createElement(Button, {\n    handlClick: clickGood,\n    text: \"good\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    handlClick: clickNeutral,\n    text: \"neutral\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    handlClick: clickBad,\n    text: \"bad\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, \"Statistics\"), /*#__PURE__*/React.createElement(Display, {\n    response: \"good\",\n    count: good,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Display, {\n    response: \"neutral\",\n    count: neutral,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Display, {\n    response: \"bad\",\n    count: bad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Statistics, {\n    good: good,\n    neutral: neutral,\n    bad: bad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/rohit/Documents/Projects/MOOC/part1/unicafe/src/index.js"],"names":["React","useState","ReactDOM","Button","props","handlClick","text","Display","response","count","Statistics","good","bad","neutral","addUp","calcAverage","calcPositive","App","setGood","setNeutral","setBad","clickGood","clickNeutral","clickBad","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport ReactDOM from 'react-dom'\n\nconst Button = (props) => {\n  return(\n    <button onClick={props.handlClick}>{props.text}</button>\n  )\n}\n\nconst Display = (props) => {\n  return(\n    <div>{props.response}: {props.count}</div>\n  )\n}\n\nconst Statistics = ({good, bad, neutral}) => {\n  const addUp = () =>{\n    return good + bad + neutral;\n  }\n  const calcAverage = () =>{\n    return ((good-bad) / (good+bad+neutral))\n  }\n  const calcPositive = () =>{\n    return ((good) / (good+bad+neutral))\n  }\n\n  if(addUp() === 0)\n\n  return(\n    <div>\n      <h1>Statistic</h1>\n      <div>all: {addUp()}</div>\n      <div>average: {calcAverage()} </div>\n      <div>average: {calcPositive()} </div>\n    </div>\n  )\n}\n\nconst App = () => {\n  // save clicks of each button to own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const clickGood = () =>{\n    setGood( good + 1)\n  }\n\n  const clickNeutral = () =>{\n    setNeutral( neutral + 1)\n  }\n\n  const clickBad = () =>{\n    setBad( bad + 1)\n  }\n\n  return (\n    <div>\n      <h1>give feeedback</h1>\n      <Button handlClick={clickGood} text=\"good\" />\n      <Button handlClick={clickNeutral} text=\"neutral\" />\n      <Button handlClick={clickBad} text=\"bad\" />\n\n      <h1>Statistics</h1>\n      <Display response=\"good\" count={good} />\n      <Display response=\"neutral\" count={neutral} />\n      <Display response=\"bad\" count={bad} />\n      <Statistics good={good} neutral={neutral} bad={bad} />\n    </div>\n  )\n}\n\nReactDOM.render(<App />, \n  document.getElementById('root')\n)"]},"metadata":{},"sourceType":"module"}